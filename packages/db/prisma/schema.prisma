// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model products {
  id     Int      @id @default(autoincrement())
  title  String
  content String
  description String
  imageUrl  String
  listedDate  DateTime @default(now())
  soldDate  DateTime?
  price  Int
  quantity  Int
  category  String
  sold  Boolean  @default(false)
  active  Boolean  @default(true)
  deletedAt DateTime?
  orders orders[]
}

// user model contain id, first name, last name, email, password
model user {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  role      String   @default("user")
  refreshTokens refreshTokens[]  // Add this relation
}

model refreshTokens {
  id           Int      @id @default(autoincrement())
  userId       Int
  refreshToken String   @unique
  user         user     @relation(fields: [userId], references: [id])  // Add this relation
}

//cart model contain id, userId, productId, quantity
model cart {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int
  price Int
}

model orders {
  id        Int      @id @default(autoincrement())
  orderId   String 
  userId    Int
  productId Int
  quantity  Int
  price     Int
  createdAt DateTime @default(now())
  product   products @relation(fields: [productId], references: [id])
}

